{"version":3,"sources":["anecdotesComponents/Anecdotes.js","NotesApp/components/Note.js","NotesApp/components/Notification.js","NotesApp/components/LoginForm.js","NotesApp/components/Toggable.js","NotesApp/components/NoteForm.js","NotesApp/services/notes.js","NotesApp/services/login.js","NotesApp/NotesApp.js","App.js","index.js"],"names":["anecdotes","Statistics","votes","index","indexOf","Math","max","className","Anecdotes","useState","selected","setSelected","Array","fill","setVotes","onClick","floor","random","length","copy","giveVote","Note","note","toggleImportance","label","important","content","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","type","value","onChange","Toggable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","NoteForm","handleChange","token","getAll","a","request","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","NotesApp","notes","setNotes","newNote","setNewNote","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","toggleImportanceOf","find","n","changedNote","noteService","then","returnedNote","map","catch","error","setTimeout","useEffect","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","noteFormRef","createRef","addNote","event","preventDefault","current","noteObject","date","Date","toISOString","concat","handleNoteChange","console","log","target","handleLogin","loginService","setItem","stringify","name","key","App","good","setGood","neutral","setNeutral","bad","setBad","formatValue","val","toFixed","divider","getValues","avg","positive","Table","bordered","hover","scope","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdee3bf5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst anecdotes = [\r\n    'If it hurts, do it more often',\r\n    'Adding manpower to a late software project makes it later!',\r\n    'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\r\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\r\n    'Premature optimization is the root of all evil.',\r\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\r\n  ]\r\n\r\n  const Statistics = ({votes}) => {\r\n      let index = votes.indexOf(Math.max(...votes))\r\n      return (\r\n        <div className=\"container text=center\">\r\n          <h1>Anecdote with most votes</h1>\r\n          <div>{anecdotes[index]}</div>\r\n          <div>Has {votes[index]} votes</div>\r\n        </div>\r\n      )\r\n  }\r\n\r\n\r\nconst Anecdotes = () => {\r\n  const [selected, setSelected] = useState(0)\r\n  const [votes, setVotes] = useState(Array(6).fill(0))\r\n\r\n  const setRandom = () => {\r\n    setSelected(Math.floor(Math.random() * anecdotes.length))\r\n  }\r\n\r\n  const giveVote = (selected) => {\r\n    const copy = [...votes]\r\n    copy[selected] += 1\r\n    setVotes(copy)\r\n  }\r\n \r\n\r\n  return (\r\n      <>\r\n    <div className=\"container\">\r\n      {anecdotes[selected]}\r\n      <div>\r\n         <button onClick={setRandom}>Next Anecdote</button>\r\n      </div>\r\n     \r\n    </div>\r\n    <div className=\"container mt-3 mb-3\">\r\n        Has {votes[selected]} votes\r\n        <div>\r\n         <button onClick={() => giveVote(selected)}>Vote</button>\r\n        </div>\r\n        \r\n    </div>\r\n    <Statistics  votes={votes}/>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Anecdotes","\r\nimport React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n    const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n\r\n    return (\r\n        <div>\r\n            <li className=\"note\">{note.content}</li>\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note","import React from \"react\";\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n    handleSubmit,\r\n    handleUsernameChange,\r\n    handlePasswordChange,\r\n    username,\r\n    password\r\n}) => {\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    username\r\n                    <input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={handleUsernameChange}                 \r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    password\r\n                    <input \r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                    />\r\n                </div>\r\n\r\n            <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleUsernameChange: PropTypes.func.isRequired,\r\n    handlePasswordChange: PropTypes.func.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n    password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n          <div style={hideWhenVisible}>\r\n            <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n          </div>\r\n          <div style={showWhenVisible}>\r\n            {props.children}\r\n            <button onClick={toggleVisibility}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    Toggable.propTypes = {\r\n        buttonLabel: PropTypes.string.isRequired\r\n    }\r\n    \r\n\r\nexport default Toggable","import React from 'react'\r\n\r\n    const NoteForm = ({onSubmit, handleChange, value}) => {\r\n        return (\r\n            <div>\r\n                <h2>Create a new note</h2>\r\n\r\n                <form onSubmit={onSubmit}>\r\n                <input\r\n                value={value}\r\n                onChange={handleChange}\r\n                />\r\n                <button type=\"submit\">Save</button>\r\n                </form>  \r\n\r\n            </div>\r\n         \r\n        )\r\n    }\r\n\r\n\r\n\r\nexport default NoteForm","import axios from 'axios';\r\n\r\n\r\nconst baseUrl = '/api/notes';\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = axios.get(baseUrl)\r\n  const response = await request\r\n    return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  const response = await request\r\n    return response.data\r\n}\r\n\r\nexport default {getAll, create, update, setToken}","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n  }\r\n  \r\n  export default { login }","\r\nimport React, {useState, useEffect} from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport Toggable from './components/Toggable'\r\nimport NoteForm from './components/NoteForm'\r\n\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login'\r\n  \r\nconst NotesApp = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [user, setUser] = useState(null)\r\n    const [loginVisible, setLoginVisible] = useState(false)\r\n  \r\n    const toggleImportanceOf = id => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n      \r\n        noteService\r\n        .update(id, changedNote)\r\n        .then(returnedNote => {\r\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(\r\n            `Note '${note.content}' was already removed from server`\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n          })\r\n      }\r\n    const rows = () => notes.map(note => \r\n        <Note key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n        />\r\n        ) \r\n\r\n// set visibility toggle of login\r\n\r\nconst loginForm = () => {\r\n  const hideWhenVisible = { display: loginVisible ? 'none' : '' }\r\n  const showWhenVisible = { display: loginVisible ? '' : 'none' }\r\n\r\n  return (\r\n    <div>\r\n      <Toggable buttonLabel=\"Login\">\r\n        <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleSubmit={handleLogin}\r\n          />\r\n      </Toggable>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n    // use effect hook\r\n    useEffect(() => {\r\n        noteService\r\n          .getAll()\r\n          .then(initialNotes => {\r\n            setNotes(initialNotes)\r\n          })\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n        if (loggedUserJSON) {\r\n          const user = JSON.parse(loggedUserJSON)\r\n          setUser(user)\r\n          noteService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const noteFormRef = React.createRef()\r\n\r\n    // add new note \r\n        const addNote = (event) => {\r\n        event.preventDefault()\r\n        noteFormRef.current.toggleVisibility()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n            id: notes.length + 1,\r\n        }\r\n\r\n        noteService\r\n        .create(noteObject)\r\n           .then(returnedNote => {\r\n            setNotes(notes.concat(returnedNote))\r\n            setNewNote('')\r\n        })\r\n        }\r\n\r\n    const handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote(event.target.value)\r\n      }\r\n    \r\n\r\n    // login\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n          const user = await loginService.login({\r\n            username, \r\n            password,\r\n          })\r\n\r\n          window.localStorage.setItem(\r\n            'loggedNoteappUser', JSON.stringify(user)\r\n          ) \r\n          noteService.setToken(user.token)\r\n          setUser(user)\r\n          setUsername('')\r\n          setPassword('')\r\n        } catch (exception) {\r\n          setErrorMessage('Wrong credentials')\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n        }\r\n      }\r\n    \r\n\r\n\r\n  \r\n  return (\r\n      <div className=\"container pt-5 pb-5\">\r\n\r\n        <Notification message={errorMessage} />\r\n\r\n        <h2>Login</h2>\r\n\r\n        {user === null ? loginForm() :\r\n          <div>\r\n            <p>{user.name} logged in</p>\r\n            <Toggable buttonLabel=\"New Note\" ref={noteFormRef}>\r\n              <NoteForm\r\n              onSubmit={addNote}\r\n              value={newNote}\r\n              handleChange={handleNoteChange}\r\n              />\r\n            </Toggable>\r\n          </div>\r\n        }\r\n      \r\n\r\n        <h1>Note</h1>\r\n        <ul>\r\n            {rows()}      \r\n         </ul>\r\n         { <form onSubmit={addNote}>\r\n            <input onChange={handleNoteChange} value={newNote} />\r\n            <button type=\"submit\">save</button>\r\n         </form> }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default NotesApp","import React, { useState } from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport './App.css';\r\nimport Anecdotes from './anecdotesComponents/Anecdotes';\r\nimport NotesApp from './NotesApp/NotesApp'\r\n\r\n\r\n\r\nconst App = () => {\r\n  \r\n\r\n  // defining states\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n\r\n  // defining onClick functions for each button\r\n  const handleGood = () => {\r\n   setGood(good => good + 1)\r\n  }\r\n\r\n  const handleNeutral = () => {\r\n    setNeutral(neutral => neutral + 1)\r\n   }\r\n\r\n  const handleBad = () => {\r\n   setBad(bad => bad + 1)\r\n  }\r\n  \r\n\r\n  const formatValue = (val) => (val * 100).toFixed(1);\r\n\r\n    // Return array of values, where 1st item is average and second is positive\r\n    const getValues = () => {\r\n    const divider = good + neutral + bad;\r\n      if (divider === 0) {\r\n        return [\"0\", \"0\"];\r\n      }\r\n      return [formatValue((good - bad) / divider), formatValue(good / divider)]\r\n      }\r\n    const [avg, positive] = getValues(); \r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container mt-5\">\r\n          <h1 className=\"text-center pb-2\">Stankove ocene</h1>\r\n      <Table bordered hover>\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th>#</th>\r\n            <th><button className=\"btn btn-success\" onClick={handleGood}>Good</button></th>\r\n            <th> <button className=\"btn btn-primary\" onClick={handleNeutral}>Neutral</button></th>\r\n            <th><button className=\"btn btn-danger\" onClick={handleBad}>Bad</button></th>\r\n            <th><h5>Overall Feedback</h5></th>\r\n            <th><h5>Average</h5></th>\r\n            <th><h5>Positive</h5></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr className=\"text-center\">\r\n            <th scope=\"row\">Feedback</th>\r\n            <td><p>{good}</p></td>\r\n            <td><p >{neutral}</p></td>\r\n            <td><p>{bad}</p></td>\r\n            <td><p>{good + neutral + bad}</p></td>\r\n            <td><p>{avg}%</p></td>\r\n            <td><p>{positive}%</p></td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n     </div>\r\n    <hr/>\r\n     <div className=\"mt-5\">\r\n        <Anecdotes  />\r\n     </div>\r\n\r\n     <div className=\"mt-5\">\r\n       <NotesApp />\r\n     </div>\r\n     </>\r\n   \r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}